name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  rabbitmq_test:
    name: RabbitMQ Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.100'
      - name: Test
        run: |
          dotnet restore &&
          dotnet test --test-adapter-path:. --logger:"junit;LogFilePath=..\..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose" --collect:"XPlat Code Coverage" --settings coverlet.runsettings.xml &&
          mkdir ./artifacts -p &&
          for cover in $(find ./tests -type f -name 'coverage.*.xml'); do coverPath=${cover#./tests/};cp $cover ./artifacts/${coverPath%%/*}-$(basename $cover); done &&
          sed 's|'"$(pwd)"'|.|g' -i artifacts/*.xml
      # - name: Upload test results
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: Test results
      #     path: artifacts/
  # code_analysis:
  #   name: Sonarqube code analysis
  #   runs-on: ubuntu-latest
  #   needs:
  #     - rabbitmq_test
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download test results
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: Test results
  #         path: artifacts/test-results
  #     - name: Sonarscanner
  #       uses: Secbyte/dotnet-sonarscanner@v1.2
  #       with:
  #         buildCommand: dotnet build -c release -v q
  #         projectKey: dotnet-document-framework
  #         projectName: WildStrategies.DocumentFramework
  #         sonarOrganisation: wildstrategies
  #         openCoverPaths: artifacts/test-results/*.opencover.xml
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
